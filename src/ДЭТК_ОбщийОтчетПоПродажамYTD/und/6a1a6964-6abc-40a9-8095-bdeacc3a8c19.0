{3,
{42,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,0,19,5,
{"#",11cfd3e0-86f8-4480-aaa5-dc6a6ccac689,
{0,""}
},6,
{"#",11cfd3e0-86f8-4480-aaa5-dc6a6ccac689,
{0,""}
},7,
{"#",acbc2eeb-2efb-48e4-b78a-661fd09fcf80,0},8,
{"S","urn:form:md:14:e0666db2-45d6-49b4-a200-061c6ba7d569"},9,
{"S","urn:form:md:13:e0666db2-45d6-49b4-a200-061c6ba7d569"},10,
{"S","urn:form:md:16:e0666db2-45d6-49b4-a200-061c6ba7d569"},11,
{"S","urn:form:md:15:e0666db2-45d6-49b4-a200-061c6ba7d569"},12,
{"S","Отчет.ОбщийОтчетПоПродажамYTD"},13,
{"S","Основной"},14,
{"B",0},15,
{"U"},16,
{"B",0},17,
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3,
{6,1e512aab-1b41-4ef6-9375-f0137be9dd91,0,0,
{1,
{1e512aab-1b41-4ef6-9375-f0137be9dd91,
{"Основной",0,
{"S","Основной"},
{4,0,
{0},"",-1,-1,0,0,""},0,0,""}
}
},
{"Pattern"},0,0}
},18,
{"S","Основной"},19,
{"S",""},20,
{"#",11cfd3e0-86f8-4480-aaa5-dc6a6ccac689,
{0,""}
},21,
{"#",f26c3706-a6ca-45cb-869a-e6ad38cd5f78,0},22,
{"S","00000000-0000-0000-0000-000000000000"},23,
{"N",0},
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ФормаСформироватьОтчет",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,0ce78048-0196-4f80-a781-9829cdb7f43e},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСформироватьОтчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"НаДату",1,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"НаДатуКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НаДатуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Организация",1,0,
{1,0},
{1,0},
{1,
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ОрганизацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОрганизацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Контрагент",1,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КонтрагентКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтрагентРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ТабРезультат",0,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{9,50,10,1,1,0,0,1,1,0,0,1,0,0,1,
{3,4,
{0}
},1,1,
{1,2988b2a5-c887-4928-94ae-5d0c9c31e999,"ТабРезультатОбработкаРасшифровки",0,0},0,1,0,0,1,0},
{0,0,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТабРезультатКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТабРезультатРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"
//формирует расшифровку основного отчета по документам
&НаСервере
Процедура СформироватьРасшифровкуНаСервере()
	Об = РеквизитФормыВЗначение(""Отчет"");
	Макет = Об.ПолучитьМакет(""Расшифровка"");
	
	ТабРезультат.Очистить();
	
	Область = Макет.ПолучитьОбласть(""Шапка"");
	Область.Параметры.Организация=РОрганизация;
	Область.Параметры.ПериодОтчета = ""Период отчета: ""+Формат(РДатаНач, ""ДФ=дд.ММ.гггг"") + "" - "" + Формат(РДатаКон, ""ДФ=дд.ММ.гггг"");
	ТабРезультат.Вывести(Область);
	
	
	//выполняем запрос, который все продажи собирает в одну таблицу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр(""ДатаНач"", НачалоДня(РДатаНач));
	Запрос.УстановитьПараметр(""ЕстьДатаНач"", ЗначениеЗаполнено(РДатаНач));
	Запрос.УстановитьПараметр(""ДатаКон"", КонецДня(РДатаКон));
	Запрос.УстановитьПараметр(""ЕстьДатаКон"", ЗначениеЗаполнено(РДатаКон));
	
	Запрос.УстановитьПараметр(""ЕстьОрганизация"", ЗначениеЗаполнено(РОрганизация));
	Запрос.УстановитьПараметр(""Организация"", РОрганизация);
	
	Запрос.УстановитьПараметр(""ЕстьКонтрагент"", ЗначениеЗаполнено(РКонтрагент));
	Запрос.УстановитьПараметр(""Контрагент"", РКонтрагент);
	
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	Рег.Период КАК Период,
	|	Рег.Регистратор КАК Документ,
	|	Рег.Организация КАК Организация,
	|	Рег.Контрагент КАК Контрагент,
	|	СУММА(Рег.Себестоимость) КАК Себестоимость,
	|	СУММА(Рег.ОбъемПродаж) КАК ОбъемПродаж
	|ИЗ
	|	РегистрНакопления.ДЭТК_Продажи КАК Рег
	|ГДЕ
	|	1 = 1
	|	И ВЫБОР
	|			КОГДА &ЕстьДатаНач
	|				ТОГДА Рег.Период >= &ДатаНач
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ДатаКон
	|				ТОГДА Рег.Период <= &ДатаКон
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОрганизация
	|				ТОГДА Рег.Организация = &Организация
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьКонтрагент
	|				ТОГДА Рег.Контрагент = &Контрагент
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Организация,
	|	Рег.Контрагент,
	|	Рег.Регистратор,
	|	Рег.Период
	|ИТОГИ
	|	СУММА(Себестоимость),
	|	СУММА(ОбъемПродаж)
	|ПО
	|	Контрагент"";
	
	ТЗИтоги = Новый ТаблицаЗначений;
	ТЗИтоги.Колонки.Добавить(""Контрагент"");
	ТЗИтоги.Колонки.Добавить(""Себестоимость"");
	ТЗИтоги.Колонки.Добавить(""ОбъемПродаж"");
	ТЗИтоги.Индексы.Добавить(""Контрагент"");
	
	Рез = Запрос.Выполнить();	
	Выборка = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
	
		Область = Макет.ПолучитьОбласть(""Строка"");
		Область.Параметры.Контрагент = Выборка.Контрагент;
		
		Область.Параметры.Себестоимость	= Выборка.Себестоимость;
		Область.Параметры.ОбъемПродаж	= Выборка.ОбъемПродаж;
		Попытка
			Область.Параметры.Рентабельность = ?(Выборка.Себестоимость=0, 0, (Выборка.ОбъемПродаж-Выборка.Себестоимость)/Выборка.Себестоимость*100);
		Исключение
		КонецПопытки;
		
		НовСтр = ТЗИтоги.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		
		ТабРезультат.Вывести(Область);
		
		//уровень документов
		Выборка2 = Выборка.Выбрать();
		
		сч=1;
		Пока Выборка2.Следующий() Цикл
			
			Область							= Макет.ПолучитьОбласть(""СтрокаДок"");
			Область.Параметры.Документ		= Выборка2.Документ;
			Область.Параметры.ДатаДок		= Формат(Выборка2.Период, ""ДФ=дд.ММ.гггг"");
			Область.Параметры.Себестоимость	= Выборка2.Себестоимость;
			Область.Параметры.ОбъемПродаж	= Выборка2.ОбъемПродаж;
			Попытка
				Область.Параметры.Рентабельность = ?(Выборка2.Себестоимость=0, 0, (Выборка2.ОбъемПродаж-Выборка2.Себестоимость)/Выборка2.Себестоимость*100);
			Исключение
			КонецПопытки;
			
			ТабРезультат.Вывести(Область);
	//		
	//		СтрТотал = ТЗПериодов.Найти(Выборка2.Период, ""Период"");
	//		
	//		Попытка
	//			СтрТотал.ОбъемПродажТотал = СтрТотал.ОбъемПродажТотал + Выборка2.ОбъемПродаж;
	//		Исключение
	//		КонецПопытки;
	//		
	//		Попытка
	//			СтрТотал.СебестоимостьТотал = СтрТотал.СебестоимостьТотал + Выборка2.Себестоимость;
	//		Исключение
	//		КонецПопытки;
	//		
	//		//для расшифровки
	//		//Область.Расшифровка
	//		
	//		
	//		сч=сч+1;
	//		
		КонецЦикла;
	//	
	//	
	КонецЦикла; 
	//
	//
	////подвал
	//
	Область = Макет.ПолучитьОбласть(""Подвал"");
	
	сс=ТЗИтоги.Итог(""Себестоимость"");
	оп=ТЗИтоги.Итог(""ОбъемПродаж"");
	Область.Параметры.Себестоимость	= сс;
	Область.Параметры.ОбъемПродаж	= оп;
			
	Попытка
		Область.Параметры.Рентабельность = ?(сс=0, 0, (оп-сс)/сс*100);
	Исключение
	КонецПопытки;
	ТабРезультат.Вывести(Область);
	
	//завершение
	ТабРезультат.Защита = Истина;
	
КонецПроцедуры

//формирует основной отчет
&НаСервере
Процедура СформироватьОтчетНаСервере()
	Об = РеквизитФормыВЗначение(""Отчет"");
	Макет = Об.ПолучитьМакет(""Макет"");
	
	ТабРезультат.Очистить();
	
	//шапка отчета
	Область = Макет.ПолучитьОбласть(""Шапка|Начало"");
	Область.Параметры.Организация=Организация;
	Область.Параметры.ДатаОтчета = ""На дату: ""+Формат(НаДату, ""ДФ=дд.ММ.гггг"");
	ТабРезультат.Вывести(Область);
	
	//а это заголовок таблицы
	Область = Макет.ПолучитьОбласть(""Заголовок|Начало"");
	ТабРезультат.Вывести(Область);
	
	
	//выполняем запрос, который все продажи собирает в одну таблицу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр(""ДатаНач"", НачалоГода(НаДату));
	Запрос.УстановитьПараметр(""ДатаКон"", КонецДня(НаДату));
	
	Запрос.УстановитьПараметр(""ЕстьОрганизация"", ЗначениеЗаполнено(Организация));
	Запрос.УстановитьПараметр(""Организация"", Организация);
	
	Запрос.УстановитьПараметр(""ЕстьКонтрагент"", ЗначениеЗаполнено(Контрагент));
	Запрос.УстановитьПараметр(""Контрагент"", Контрагент);
	
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	Рег.Период КАК Период,
	|	Рег.Организация КАК Организация,
	|	Рег.Контрагент КАК Контрагент,
	|	Рег.СебестоимостьОборот КАК Себестоимость,
	|	Рег.ОбъемПродажОборот КАК ОбъемПродаж
	|ПОМЕСТИТЬ ВТПродажи
	|ИЗ
	|	РегистрНакопления.ДЭТК_Продажи.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			ВЫБОР
	|					КОГДА &ЕстьОрганизация
	|						ТОГДА Организация = &Организация
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ЕстьКонтрагент
	|						ТОГДА Контрагент = &Контрагент
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК Рег"";
	
	Запрос.Выполнить();
	
	//выбрать из таблицы продаж месяцы, чтобы построить шапку макета
	
	Запрос.Текст = 
	""ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ.Период КАК Период
	|ИЗ
	|	ВТПродажи КАК ВТ
	|УПОРЯДОЧИТЬ ПО
	|	ВТ.Период"";
	
	Рез = Запрос.Выполнить();
	
	//выгрузим этот запрос в таблицу, она потом пригодится
	ТЗПериодов = Рез.Выгрузить();
	ТЗПериодов.Индексы.Добавить(""Период"");
	
	//поля для накопления итогов для подвала
	ТЗПериодов.Колонки.Добавить(""ОбъемПродажТотал"", Новый ОписаниеТипов(""Число""));
	ТЗПериодов.Колонки.Добавить(""СебестоимостьТотал"", Новый ОписаниеТипов(""Число""));
	
	//вывод в отчет шапки. все колонки с месяцами, которые есть в запросе
	сч = 1;
	Для Каждого СтрокаПериод Из ТЗПериодов Цикл
		
		Область = Макет.ПолучитьОбласть(""Заголовок|Месяц"");
		Область.Параметры.Месяц = Формат(СтрокаПериод.Период, ""ДФ=ММММ"");
		
		//расшифровка
		Область.Параметры.РасшифровкаМесяца = Новый Структура(""Организация, Контрагент, ДатаНач, ДатаКон"",
			Организация, Неопределено, НачалоМесяца(СтрокаПериод.Период), КонецМесяца(СтрокаПериод.Период));
		
		Область.Область(""R1C1:R2C3"").ЦветФона = ФормулаЦвета(сч);
		
			
			
		ТабРезультат.Присоединить(Область);
			
		сч=сч+1;
	КонецЦикла;
	
	
	//выбрать контрагентов и обороты по ним. продажи будут присоединяться к таблице периодов, чтобы 
	//в случае отсутствия оборотов в запросе все же был этот период
	
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	ВТ.Период КАК Период,
	|	ВТ.Контрагент КАК Контрагент,
	|	СУММА(ВТ.Себестоимость) КАК Себестоимость,
	|	СУММА(ВТ.ОбъемПродаж) КАК ОбъемПродаж
	|ИЗ
	|	ВТПродажи КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Период,
	|	ВТ.Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Период
	|ИТОГИ
	|	СУММА(Себестоимость),
	|	СУММА(ОбъемПродаж)
	|ПО
	|	Контрагент, 
	|	Период ПЕРИОДАМИ (МЕСЯЦ, &ДатаНач, &ДатаКон)"";
	
	
	Рез = Запрос.Выполнить();	
	
	//ТЗЗЗЗ = Рез.Выгрузить();
	//
	//ДЗЗЗЗ = Рез.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	Выборка = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		//обход контрагентов
		Область = Макет.ПолучитьОбласть(""Строка|Начало"");
		Область.Параметры.Контрагент = Выборка.Контрагент;
		
		//расшифровка
		Область.Параметры.РасшифровкаКонтрагента = Новый Структура(""Организация, Контрагент, ДатаНач, ДатаКон"",
			Организация, Выборка.Контрагент, Неопределено, Неопределено);
		
		ТабРезультат.Вывести(Область);
		
		
		//""ВСЕ"" - означет, что нужно выбрать все периоды, т.е. в нашем случае, с января по декабрь.
		//но нам это не надо, т.к. незачем выводить те периоды, когда совсем не было оборотов ни у одного контрагента.
		//Чтобы убрать лишние периоды, будем проверять наличие периода в таблице ТЗПериодов , если там такого периода нет,
		//не будем его выводить здесь
		//возможные проблемы. пример.
		//если будут обороты за февраль, апрель, июнь, то отчет не выведет март и май, т.к. их не будет в таблице ТЗПериодов.
		//это не смертельно, но некрасиво
		
		Выборка2 = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, ""Период"", ""ВСЕ"");
		
		сч=1;
		Пока Выборка2.Следующий() Цикл
			
			//если в ТЗПериодов такого периода нет, то не надо выводить данные по нему, в т.ч. пустые
			Если ТЗПериодов.Найти(Выборка2.Период, ""Период"")=Неопределено Тогда
				Продолжить;				
			КонецЕсли;
			
			Область = Макет.ПолучитьОбласть(""Строка|Месяц"");
			Область.Параметры.ОбъемПродаж = Выборка2.ОбъемПродаж;
			Область.Параметры.Себестоимость = Выборка2.Себестоимость;
			Попытка
				Область.Параметры.Рентабельность = ?(Выборка2.Себестоимость=0, 0, (Выборка2.ОбъемПродаж-Выборка2.Себестоимость)/Выборка2.Себестоимость*100);
			Исключение
			КонецПопытки;
			
			//расшифровка
			Область.Параметры.РасшифровкаКонтрагента = Новый Структура(""Организация, Контрагент, ДатаНач, ДатаКон"",
				Организация, Выборка.Контрагент, НачалоМесяца(Выборка2.Период), КонецМесяца(Выборка2.Период));
			
					
			Область.Область(""R1C1:R1C3"").ЦветФона  = ФормулаЦвета(сч);
			
			
			ТабРезультат.Присоединить(Область);
			
			СтрТотал = ТЗПериодов.Найти(Выборка2.Период, ""Период"");
			
			Попытка
				СтрТотал.ОбъемПродажТотал = СтрТотал.ОбъемПродажТотал + Выборка2.ОбъемПродаж;
			Исключение
			КонецПопытки;
			
			Попытка
				СтрТотал.СебестоимостьТотал = СтрТотал.СебестоимостьТотал + Выборка2.Себестоимость;
			Исключение
			КонецПопытки;
			
			сч=сч+1;
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	
	
	//подвал
	
	Область = Макет.ПолучитьОбласть(""Подвал|Начало"");
	ТабРезультат.Вывести(Область);

	сч = 1;
	Для Каждого СтрокаПериод Из ТЗПериодов Цикл
		
		Область = Макет.ПолучитьОбласть(""Подвал|Месяц"");
		Область.Параметры.ОбъемПродаж = СтрокаПериод.ОбъемПродажТотал;
		Область.Параметры.Себестоимость = СтрокаПериод.СебестоимостьТотал;
		Область.Параметры.Рентабельность = ?(СтрокаПериод.СебестоимостьТотал=0, 0, (СтрокаПериод.ОбъемПродажТотал-СтрокаПериод.СебестоимостьТотал)/СтрокаПериод.СебестоимостьТотал*100);
		
		//расшифровка. аналог расшифровки месяца (пока)
		Область.Параметры.РасшифровкаИтого = Новый Структура(""Организация, Контрагент, ДатаНач, ДатаКон"",
			Организация, Неопределено, НачалоМесяца(СтрокаПериод.Период), КонецМесяца(СтрокаПериод.Период));
		
				
		Область.Область(""R1C1:R1C3"").ЦветФона  = ФормулаЦвета(сч);
		ТабРезультат.Присоединить(Область);
		
		сч=сч+1;
	КонецЦикла;
	
	
	
	
	//завершение
	ТабРезультат.Защита = Истина;
	
	ТабРезультат.ФиксацияСлева=2;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ФормулаЦвета(сч)
	//доделать. цвет потом наверно нужно сделать фиксированный для каждого месяца
	Возврат Новый Цвет(120+сч*10, 120+сч*25, 110)
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры


&НаКлиенте
Процедура ТабРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	//если эта форма уже открыта в режиме расшифровки, то эта функция должна отрабатывать стандартно
	
	Если Параметры.КлючНазначенияИспользования = ""ДляРасшифровки"" Тогда
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка=Ложь;
	Расшифровка.Вставить(""КлючНазначенияИспользования"", ""ДляРасшифровки"");
	//нужно понять, внешяя это обработка или в составе метаданых
	
	Если ЭтоВнешнийОтчет() Тогда
		ОткрытьФорму(""ВнешнийОтчет.ОбщийОтчетПоПродажамYTD.Форма.ФормаОтчета"", Расшифровка)
	Иначе
		ОткрытьФорму(""Отчет.ОбщийОтчетПоПродажамYTD.Форма.ФормаОтчета"", Расшифровка)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЭтоВнешнийОтчет()
	
	//нужно понять, внешяя это обработка или в составе метаданых
	Попытка
		
		ПредставлениеОтчета = Строка(РеквизитФормыВЗначение(""Отчет""));
		Если Найти(ПредставлениеОтчета, ""Внешний"")>0 Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.КлючНазначенияИспользования = ""ДляРасшифровки"" Тогда
		Параметры.Свойство(""Контрагент"", РКонтрагент);
		Параметры.Свойство(""Организация"", РОрганизация);
		Параметры.Свойство(""ДатаНач"", РДатаНач);
		Параметры.Свойство(""ДатаКон"", РДатаКон);
		
		ЭтаФорма.Заголовок = ""Расшифровка"";
		
		Элементы.Организация.Доступность = ЛОЖЬ;
		Элементы.Контрагент.Доступность = ЛОЖЬ;
		Элементы.НаДату.Доступность = ЛОЖЬ;
		Элементы.ФормаСформироватьОтчет.Доступность = Ложь;
		СформироватьРасшифровкуНаСервере();
		
	КонецЕсли;
КонецПроцедуры
",
{4,9,
{9,
{1},0,"Отчет",
{1,0},
{"Pattern",
{"#",68d93b6a-8142-4afe-b146-7b1887af12d6}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ТабРезультат",
{1,1,
{"ru","Таб результат"}
},
{"Pattern",
{"#",e603103e-a318-4edc-a014-b1c6cf94d49f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"НаДату",
{1,1,
{"ru","На дату"}
},
{"Pattern",
{"D","D"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,1,0,
{0,0},
{0,0}
},
{9,
{4},0,"Организация",
{1,1,
{"ru","Организация"}
},
{"Pattern",
{"#",c92a1124-c41e-42a4-bda7-3bbac9c6039e}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"Контрагент",
{1,1,
{"ru","Контрагент"}
},
{"Pattern",
{"#",9f6206b2-1ed6-423c-9b08-fd4978930c49}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"РДатаНач",
{1,1,
{"ru","Дата начала расшифровки"}
},
{"Pattern",
{"D"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"РДатаКон",
{1,1,
{"ru","Дата окончания расшифровки"}
},
{"Pattern",
{"D"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"РОрганизация",
{1,1,
{"ru","Организация для расшифровки"}
},
{"Pattern",
{"#",c92a1124-c41e-42a4-bda7-3bbac9c6039e}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"РКонтрагент",
{1,1,
{"ru","Контрагент для расшифровки"}
},
{"Pattern",
{"#",9f6206b2-1ed6-423c-9b08-fd4978930c49}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,1,
{7,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СформироватьОтчет",
{1,1,
{"ru","Сформировать"}
},
{1,1,
{"ru","Сформировать отчет"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,0ce78048-0196-4f80-a781-9829cdb7f43e},"",-1,-1,1,0,""},"СформироватьОтчет",2,0,0,
{0,0},1,0}
},
{0,0},
{0,0},0,0}